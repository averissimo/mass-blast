# Blast options and task
#  updated to blast+ version: 2.2.30+
#
# Options currently implemented for engine are:
#  - tblastn
#  - blastn
# default in user.yml is tblastn
engine: tblastn
#
#
# separate each transcriptome in a individual folder
#  this will create many folders in the output directory
#  each ending with the database name
separate_db: true
#
force_folder: test_tblastn
clean_output: true
#
#
#
# number of threads to use
#  only valid with separate_db option
use_threads: 1
#
# path to debugging file, change it in respect to user.yml
debug:
  file: ../../output/log.tblastn_rspec.txt
  show_stdout_if_file: false

annotation_dir: ../../db_and_queries/annotation
#
#
# Opts are engine specific, the default in user.yml
#  are for tblastn
#
# Example of valid options (as of the writing of this file):
#  - for tblastn (default in user.yml):
# opts: "-max_target_seqs 500 -evalue 1E-20"
#  - for blastn:
# opts: "-dust no -max_target_seqs 500 -evalue 1E-20"
opts: "-max_target_seqs 500 -evalue 1E-100"
#
#
#
# Threshold that should filter out results by identity
#  values can take between 0 and 1 (i.e. 0% and 100%)
identity:
  # minimum range for identity
  min: .40
  # maximum range for identity
  max: 1
#
#
# Filtering options
#
prune_identical:
  #  use_worst: will pick the result with highest identity if false
  #   and the lowest identity if true
  use_worst: false
  # first: the initial filtering step will remove all identical sseqid and
  #  pick the best/worst (depending on use_worst option)
  first: sseqid
  # list: list of subsequent filtering columns, works the same as first
  list:
    - nt_aligned_seq
#
# output directory options:
#  - dir: output directory's name
#  - ext: extension for blast files
output:
  dir: ../../output
  extension: .out
  intermediate: intermediate
  blast_results: blast_results
  fastas: fasta_files
#
db:
  parent: "../db"
  list:
    - blackberry_loch_ness
#
query:
  parent: "../tblastn"
  folders:
    - query
#
format:
  outfmt: 6
  specifiers:
    qseqid: "means Query Seq-id"
    evalue: "means Expect value"
    pident: "means Percentage of identical matches"
    qcovs: "means Query Coverage Per Subject"
    qgi: "means Query GI"
    qacc: "means Query accesion"
    sseqid: "means Subject Seq-id"
    sallseqid: "means All subject Seq-id(s), separated by a ';'"
    sgi: "means Subject GI"
    sallgi: "means All subject GIs"
    sacc: "means Subject accession"
    sallacc: "means All subject accessions"
    qstart: "means Start of alignment in query"
    qend: "means End of alignment in query"
    sstart: "means Start of alignment in subject"
    send: "means End of alignment in subject"
    bitscore: "means Bit score"
    score: "means Raw score"
    length: "means Alignment length"
    nident: "means Number of identical matches"
    mismatch: "means Number of mismatches"
    positive: "means Number of positive-scoring matches"
    gapopen: "means Number of gap openings"
    gaps: "means Total number of gap"
    ppos: "means Percentage of positive-scoring matches"
    frames: "means Query and subject frames separated by a '/'"
    qframe: "means Query frame"
    sframe: "means Subject frame"
    staxids: "means unique Subject Taxonomy ID(s), separated by a ';'(in numerical order)"
    sscinames: "means unique Subject Scientific Name(s), separated by a ';'"
    scomnames: "means unique Subject Common Name(s), separated by a ';'"
    sblastnames: "means unique Subject Blast Name(s), separated by a ';' (in alphabetical order)"
    sskingdoms: "means unique Subject Super Kingdom(s), separated by a ';' (in alphabetical order)"
    stitle: "means Subject Title"
    salltitles: "means All Subject Title(s), separated by a '<>'"
    sstrand: "means Subject Strand"
    qcovhsp: "means Query Coverage Per HSP"
    qseq: "means Aligned part of query sequence"
    sseq: "means Aligned part of subject sequence"
